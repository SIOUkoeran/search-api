input {
	file {
		path => "/usr/share/logstash/input_data/address.csv"
		type => "poi"
		start_position => "beginning"
		sincedb_path => "/usr/share/logstash/sincedb/poi.file"
	}
	file {
		path => "/usr/share/logstash/input_data/address.csv"
		type => "address"
		start_position => "beginning"
		sincedb_path => "/usr/share/logstash/sincedb/address.file"
	}
}

filter {
	if [type] == "address" {
		csv {
			separator => ","
			columns => ["poi_id","poi_code","fname","cname","phone_a","phone_b","phone_c","zip_code","address","san_bun","primary_bun","secondary_bun","longitude","latitude"]
			remove_field => ["fname","cname","phone_a","phone_b","phone_c","zip_code","longitude","latitude"]
		}

		ruby {
          code => '
              address = event.get("address")
              split_address = address.split(" ")
              primary = event.get("primary_bun").gsub("0", "")
              secondary = event.get("secondary_bun").gsub("0", "")
              value = primary == "" \
              ? [address.gsub(" ", "") + " ", split_address[1] + split_address[2] + " "] \
              : [address.gsub(" ", "") + primary + "-" + secondary + " ", \
              split_address[1] + split_address[2] + primary + "-" + secondary + " ", \
              split_address[2] + primary + "-" + secondary + " ", \
              primary + "-" + secondary + " "]
              event.set("[address_suggest]", value)
			  event.set("[address_suggest][output]", address + " " + primary + "-" + secondary)
          '
        }

	}
	else if [type] == "poi" {
		csv {
			separator =>","
			skip_header => false
			columns => ["poi_id","poi_code","fname","cname","phone_a","phone_b","phone_c","zip_code","address","san_bun","primary_bun","secondary_bun","longitude","latitude"]
			remove_field =>["address","san_bun","primary_bun","secondary_bun"]
		}
		mutate {
			gsub => ["phone_a", "NULL", "-1"]
			gsub => ["phone_b", "NULL", "-1"]
			gsub => ["phone_c", "NULL", "-1"]
			gsub => ["zip_code", "NULL", "-1"]
			rename => {"[longitude]" => "[location][lon]"}
			rename => {"[latitude]" => "[location][lat]"}
		}
		translate {
			target => "[@metadata][match]"
			dictionary_path => "/usr/share/logstash/input_data/category_dic.csv"
			source => "poi_code"
		}
		dissect {
			mapping => {"[@metadata][match]" => "%{large_category};%{medium_category};%{small_category}"}
		}
		ruby {
			code => '
				f_name = event.get("fname").gsub(/NULL|\//, "")
				c_name = event.get("[cname]").gsub(/NULL|\//," ")
				combined_name = f_name + c_name + " "
				event.set("[poi_suggest]", combined_name)
			'
		}
	}
}

output {
	if [type] == "address" {
		elasticsearch {
			hosts => ["http://cluster1-master-node:9200"]
			index => "address"
		}
	}
	if [type] == "poi" {
		elasticsearch {
			hosts => ["http://cluster1-master-node:9200"]
			index => "poi"
		}
	}
	stdout {codec => rubydebug {metadata => true}}
}
