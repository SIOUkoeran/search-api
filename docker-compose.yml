version: '3.7'
services:
  ### elasticsearch (master-node 1, data-node 2)
  cluster1-master-node:
    build: ./elasticsearch
    container_name: cluster1-master-node
    environment:
      - node.name=cluster1-master-node
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=cluster1-data-node,cluster1-data-node2
      - cluster.initial_master_nodes=cluster1-master-node,cluster1-data-node,cluster1-data-node2
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=alstn977
      - node.master=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
  cluster1-data-node:
    build: ./elasticsearch
    container_name: cluster1-data-node
    environment:
      - node.name=cluster1-data-node
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=cluster1-master-node,cluster1-data-node2
      - cluster.initial_master_nodes=cluster1-master-node,cluster1-data-node,cluster1-data-node2
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=alstn977
      - node.data=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9201:9200"
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml 
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  cluster1-data-node2:
    build: ./elasticsearch
    container_name: cluster1-data-node2
    environment:
      - node.name=cluster1-data-node2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=cluster1-data-node,cluster1-master-node
      - cluster.initial_master_nodes=cluster1-master-node,cluster1-data-node,cluster1-data-node2
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=alstn977
      - node.data=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9202:9200"
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml 
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
  ## elasticsearch set_up
  es-set_up:
    build: ./elasticsearch/config/
    restart: "no"
    depends_on:
      cluster1-master-node:
        condition: service_healthy
    networks:
      - elastic

  ### logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.2
    container_name: logstash
    user: root
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
      - xpack.monitoring.enabled=false
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: false
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: false
      - type: bind
        source: ./logstash/config/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
        read_only: false
      - type: bind
        source: ./logstash/data/category.csv
        target: /usr/share/logstash/input_data/category.csv
      - type: bind
        source: ./logstash/data/category_dic.csv
        target: /usr/share/logstash/input_data/category_dic.csv
      - type: bind
        source: ./logstash/data/address.csv
        target: /usr/share/logstash/input_data/address.csv
      - type: volume
        source: logstash-data
        target: /usr/share/logstash/sincedb/
    networks:
      - elastic
    depends_on:
      - cluster1-data-node
      - cluster1-master-node
      - cluster1-data-node2
      - es-set_up

  ### kibana
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.2
    environment:
      - ELASTICSEARCH_HOSTS=["http://cluster1-master-node:9200"]
      - ELASTIC_USERNAME=elastic
      - ELASTIC_USERPASSWORD=alstn977
      - xpack.reporting.enabled=true
    ports:
      - 5601:5601
    networks:
      - elastic
    depends_on:
      - cluster1-data-node
      - cluster1-master-node
    links:
      - cluster1-master-node

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  logstash-data:
    driver: local
networks:
  elastic:
    driver: bridge